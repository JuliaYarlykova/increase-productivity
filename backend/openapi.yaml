openapi: 3.0.0
info:
  title: Authentication API
  version: 1.0.0
  description: API documentation for user authentication endpoints.

servers:
  - url: https://increase-productivity.abdrashitov-academy.ru/
    description: Production server
  - url: http://127.0.0.1:8000/
    description: local server

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                middlename:
                  type: string
                lastname:
                  type: string
                email:
                  type: string
                  format: email
                phone_number:
                  type: string
                password:
                  type: string
                  format: password
                password_confirmation:
                  type: string
                  format: password
              required:
                - firstname
                - email
                - password
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/auth/login:
    post:
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                    example: Bearer
                  expires_in:
                    type: integer
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/auth/logout:
    post:
      summary: Log out the authenticated user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/values:
    get:
      summary: List all values
      responses:
        "200":
          description: A list of values
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Value'
    post:
      summary: Create a new value
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreValueRequest'
      responses:
        "201":
          description: Value created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Value'
        "403":
          description: Maximum number of Value instances reached
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/values/{id}:
    get:
      summary: Get a single value
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A single value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Value'
        "404":
          description: Value not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: Update an existing value
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateValueRequest'
      responses:
        "200":
          description: Value updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Value'
        "404":
          description: Value not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      summary: Delete a value
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Value deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Value not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string


  #Employees API
  /api/employees:
    summary: Operations about employees
    get:
      tags:
       - Employees GET
      summary: Get all the employees
      responses:
        "200":
          description: 200 response
        "400":
          description: Bad request

    post:
      tags:
        - Employees POST
      summary: Add any employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/employee"
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/employee"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/employees/{id}:
    summary: Operations about employee
    get:
      tags:
      - Employees GET
      summary: Get the employee
      parameters:
        - name: employee_id
          required: true
          in: path
          schema:
            type: integer
      responses:
        200:
          description: Success
        400:
          description: Incorrect input

    put:
      tags:
      - Employees PUT
      summary: Update an employee
      parameters:
        - name: employee_id
          required: true
          in: path
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/employee"
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/employee"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    delete:
      tags:
      - Employees DELETE
      summary: Delete an employee
      parameters:
        - name: employee_id
          required: true
          in: path
          schema:
            type: integer
      responses:
        200:
          description: Success
        400:
          description: Incorrect input
        default:
          description: Success

# Companies API
  /api/companies:
    summary: Operations about companies
    get:
      tags:
        - Companies GET
      summary: Get all the companies
      responses:
        200:
          description: Success
        400:
          description: Incorrect input
        default:
          description: Success
    post:
      tags:
        - Companies POST
      summary: Add any companies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/company"
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/company"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/companies/{id}:
    summary: Operations about Companies
    get:
      tags:
        - Companies GET
      summary: Get the companies
      parameters:
        - name: employee_id
          required: true
          in: path
          schema:
            type: integer
      responses:
        200:
          description: Success
        400:
          description: Incorrect input
        default:
          description: Success

    put:
      tags:
        - Companies PUT
      summary: Update an company
      parameters:
        - name: employee_id
          required: true
          in: path
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/company"
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/company"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      tags:
        - Companies DELETE
      summary: Delete an company
      parameters:
        - name: employee_id
          required: true
          in: path
          schema:
            type: integer
      responses:
        200:
          description: Success
        400:
          description: Incorrect input
        default:
          description: Success

components:
  schemas:
    Value:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    StoreValueRequest:
        type: object
        properties:
          name:
            type: string
            required: true
    UpdateValueRequest:
        type: object
        properties:
          name:
            type: string
            required: true

    employee:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        date_of_birth:
          type: string
          format: date
        position:
          type: integer
        work_experience:
          type: integer
        salary:
          type: number
          format: float
        email:
          type: string
          format: email
        phone_number:
          type: string

    company:
      type: object
      properties:
          name:
            type: string
          address:
            type: string
          phone_number:
            type: string
          email:
            type: string
            format: email
          description:
            type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
