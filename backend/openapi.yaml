openapi: 3.0.0
info:
  title: Authentication API
  version: 1.0.0
  description: API documentation for user authentication endpoints.

servers:
  - url: https://increase-productivity.abdrashitov-academy.ru/
    description: Production server

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                middlename:
                  type: string
                lastname:
                  type: string
                email:
                  type: string
                  format: email
                phone_number:
                  type: string
                password:
                  type: string
                  format: password
                password_confirmation:
                  type: string
                  format: password
              required:
                - firstname
                - email
                - password
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/auth/login:
    post:
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                    example: Bearer
                  expires_in:
                    type: integer
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/auth/logout:
    post:
      summary: Log out the authenticated user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /api/values:
    get:
      summary: List all values
      responses:
        "200":
          description: A list of values
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Value'
    post:
      summary: Create a new value
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreValueRequest'
      responses:
        "201":
          description: Value created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Value'
        "403":
          description: Maximum number of Value instances reached
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/values/{id}:
    get:
      summary: Get a single value
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A single value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Value'
        "404":
          description: Value not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: Update an existing value
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateValueRequest'
      responses:
        "200":
          description: Value updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Value'
        "404":
          description: Value not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      summary: Delete a value
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Value deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Value not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Value:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    StoreValueRequest:
      type: object
      properties:
        name:
          type: string
          required: true
    UpdateValueRequest:
      type: object
      properties:
        name:
          type: string
          required: true
